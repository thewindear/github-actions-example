#actions的名称
name: github-actions-example
#触发这个工作流的事件
on:
  label:
    types: [created]
# 全局环境变量
env:
  GO_VERSION: 1.18.0
  GO_USERNAME: root
  GO_PASSWORD: root
#作业内容
jobs:
  show-time:
    name: 显示时间
    runs-on: ubuntu-latest
    steps:
      - name: 打印时间
        run: date
  show-os:
    name: 显示系统版本
    # 这里是依赖于 check-code和show-time这两个job的也就是他会最后才执行
    needs:
      - check-code
      - show-time
    runs-on: ubuntu-latest
    steps:
      - name: 显示系统版本
        run: uname -a
  #作业1 check-version
  check-code:
    name: 测试代码
    # 运行器为ubuntu
    # 这里使用了strategy 中的 matrix 来进行两个系统的测试
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        #go: ['1.16.0', '1.18.0']
    # 步骤
    steps:
      - name: 拉取代码
        uses: actions/checkout@v3
        # 当表达式中返回false会跳转这个步骤
        # if: ${{ contains('hello world', 'abc') }}

      - name: 安装go
        uses: actions/setup-go@v3
        with:
          # 这里直接取了上面定义好的 版本
          go-version: ${{ env.GO_VERSION }}

      - name: 运行代码单元测试
        # 在步骤中可以使用env 来定义环境变量
        env:
          GO_ENV_USERNAME: ${{ env.GO_USERNAME }}
        run: go test -v ./tests